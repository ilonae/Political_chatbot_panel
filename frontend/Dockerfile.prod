# Stage 1: Build frontend
FROM node:20-alpine AS frontend-build

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm install
COPY frontend/ ./
RUN npm run build

# Stage 2: Build backend
FROM python:3.11-slim AS backend-build

WORKDIR /app/backend
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
COPY backend/app ./app

# Stage 3: Final image with Nginx + backend
FROM nginx:alpine AS full-prod

# Copy built react static files
COPY --from=frontend-build /app/frontend/build /usr/share/nginx/html

# Copy custom nginx config
COPY nginx/full.conf /etc/nginx/nginx.conf

# Copy backend build artifacts
# We need uvicorn (or use gunicorn) + our FastAPI code
COPY --from=backend-build /app/backend /app/backend

# Make sure some required dependencies are installed
RUN apk add --no-cache python3 py3-pip

WORKDIR /app/backend

# Expose ports
EXPOSE 80

# Run Nginx and backend. One option is to run both using a script
COPY start.sh /start.sh
RUN chmod +x /start.sh

CMD ["/start.sh"]
