# ---------- Stage 1: Build frontend ----------
    FROM node:20-alpine AS frontend-build
    WORKDIR /app/frontend
    COPY frontend/package*.json ./
    RUN npm install
    COPY frontend ./
    RUN npm run build
    
    # ---------- Stage 2: Build backend ----------
    FROM python:3.11-alpine AS backend-build
    WORKDIR /app/backend
    COPY backend/requirements.txt ./
    RUN pip install --no-cache-dir -r requirements.txt
    COPY backend ./app
    
    # ---------- Stage 3: Production image with Nginx ----------
    FROM nginx:alpine
    # Set working directory for Nginx
    WORKDIR /usr/share/nginx/html
    
    # Copy frontend build
    COPY --from=frontend-build /app/frontend/build ./ 
    
    # Copy Nginx config
    COPY frontend/nginx/default.conf /etc/nginx/conf.d/default.conf
    
    # Copy backend
    COPY --from=backend-build /app/backend /app/backend
    
    # Set environment variable for backend port (used in Nginx config)
    ENV BACKEND_PORT=8080
    
    # Expose Fly-assigned port
    EXPOSE 8080
    
    # Start both backend (uvicorn) and Nginx
    CMD sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8080 & nginx -g 'daemon off;'"
    